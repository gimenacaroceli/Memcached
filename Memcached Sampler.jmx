<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Sample test" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">50</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TCPSampler guiclass="TCPSamplerGui" testclass="TCPSampler" testname="Memcached Sampler" enabled="true">
          <stringProp name="TCPSampler.classname">TCPClientImpl</stringProp>
          <stringProp name="TCPSampler.server">localhost</stringProp>
          <boolProp name="TCPSampler.reUseConnection">false</boolProp>
          <stringProp name="TCPSampler.port">8080</stringProp>
          <boolProp name="TCPSampler.nodelay">false</boolProp>
          <stringProp name="TCPSampler.timeout"></stringProp>
          <stringProp name="TCPSampler.request">set key 0 0 5
value
get key
set wrong invalid
set bad_key 0 0 5
hi
add bad_key 0 0 8
value
set add_key 0 0 5
value
get add_key
set other_add_key 0 0 11
other value
add other_add_key 0 0 5
value
get other_add_key
add wrong 0 invalid 3
replace key 5 300 13
replace value
get key
replace no_key 0 0 5
value
replace wrong 0 0 invalid
set key 0 0 5
value
append key 10 10 7
 append
get key
append not_exist_key 10 10 6
append
append key 50 50 7
value
set prep_key 0 0 5
value
prepend prep_key 10 10 8
prepend 
get prep_key
prepend not_exist_key 10 10 7
prepend
prepend prep_key 50 50 8
value
cas cas_key_inexistent 0 0 5 1
value
set cas_key 0 0 5
value
cas cas_key 5 0 9 1
new value
set get_key 0 0 5
value
set other_get_key 5 0 7
value_2
get cas_key get_key other_get_key prep_key
quit
</stringProp>
          <boolProp name="TCPSampler.closeConnection">true</boolProp>
          <stringProp name="TCPSampler.EolByte">0</stringProp>
          <stringProp name="ConfigTestElement.username"></stringProp>
          <stringProp name="ConfigTestElement.password"></stringProp>
        </TCPSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-256274487">STORED
VALUE key 0 5
value
END
CLIENT_ERROR bad command line format
CLIENT_ERROR bad data chunk
ERROR
CLIENT_ERROR bad data chunk
ERROR
STORED
VALUE add_key 0 5
value
END
STORED
NOT STORED
VALUE other_add_key 0 11
other value
END
CLIENT_ERROR bad command line format
STORED
VALUE key 5 13
replace value
END
NOT STORED
CLIENT_ERROR bad command line format
STORED
STORED
VALUE key 0 12
value append
END
NOT STORED
CLIENT_ERROR bad data chunk
ERROR
STORED
STORED
VALUE prep_key 0 13
prepend value
END
NOT STORED
CLIENT_ERROR bad data chunk
ERROR
NOT FOUND
STORED
EXISTS
STORED
STORED
VALUE cas_key 0 5
value
VALUE get_key 0 5
value
VALUE other_get_key 5 7
value_2
VALUE prep_key 0 13
prepend value
END
</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
